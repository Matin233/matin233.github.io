(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{429:function(t,s,a){"use strict";a.r(s);var n=a(44),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"网页渲染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网页渲染"}},[t._v("#")]),t._v(" 网页渲染")]),t._v(" "),a("p",[t._v("今天我想集中讨论网页渲染的主题，以及为什么它在网页开发中很重要。有很多文章都涉及到这个主题，但是这些信息是零散的，而且有些支离破碎。例如，为了理解这个主题，我必须研究很多资料。这就是为什么我决定写这篇文章。我相信这篇文章对于初学者和那些想要更新和组织他们已经知道的东西的高级开发人员都是有用的。")]),t._v(" "),a("p",[t._v("渲染必须从一开始就进行优化，因为样式和脚本在页面渲染中起着至关重要的作用。为了避免性能问题，专业人士必须知道一些技巧。")]),t._v(" "),a("p",[t._v("本文没有详细研究内部浏览器机制，而是提供了一些常见的原则。不同的浏览器引擎工作方式不同，这会使特定于浏览器的研究更加复杂。")]),t._v(" "),a("h2",{attrs:{id:"浏览器如何渲染网页"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器如何渲染网页"}},[t._v("#")]),t._v(" 浏览器如何渲染网页")]),t._v(" "),a("p",[t._v("我们首先概述一下呈现页面时浏览器的操作:")]),t._v(" "),a("ol",[a("li",[t._v("DOM (文档对象模型)是由从服务器接收的 HTML 构成的")]),t._v(" "),a("li",[t._v("样式被加载和解析，形成 CSSOM (CSS 对象模型)")]),t._v(" "),a("li",[t._v("在 DOM 和 CSSOM 之上，创建了一个渲染树，它是一组要渲染的对象（Webkit 将这些对象中的每一个称为“渲染器(renderer)”或“渲染对象(render object)”，而在 Gecko 中它是一个“框架(frame)”）。渲染树反映了 DOM 结构，除了不可见元素（如标签或具有 display:none; 的元素）。每个文本字符串在渲染树中表示为单独的渲染器。每个渲染对象都包含其对应的 DOM 对象（或文本块）以及计算出的样式。换句话说，渲染树描述了 DOM 的可视化表示。")]),t._v(" "),a("li",[t._v("对于每个渲染树元素，计算它的坐标，这被称为“布局(layout)”。浏览器使用流布局(flow method)，该方法只需要一次传递就可以布局所有元素(表需要多次传递)")]),t._v(" "),a("li",[t._v("最后，这实际上会显示在一个浏览器窗口中，这个过程称为“绘制”")])]),t._v(" "),a("p",[t._v("当用户与页面交互时，或者脚本修改它时，随着底层页面结构的变化，前面提到的一些操作必须重复。")]),t._v(" "),a("h2",{attrs:{id:"repaint-重绘"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#repaint-重绘"}},[t._v("#")]),t._v(" Repaint(重绘)")]),t._v(" "),a("p",[t._v("当更改不影响元素在页面上位置的元素样式(比如"),a("code",[t._v("background-color")]),t._v("、"),a("code",[t._v("border-color")]),t._v("、"),a("code",[t._v("visibility")]),t._v(")时，浏览器只需用新的样式重新绘制元素(这意味着正在进行“repaint”或“restyle”)。")]),t._v(" "),a("h2",{attrs:{id:"reflow-重排-回流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reflow-重排-回流"}},[t._v("#")]),t._v(" Reflow(重排/回流)")]),t._v(" "),a("p",[t._v("当更改影响到文档内容、结构或元素位置时，将发生回流(Reflow)(或重新布局(relayout))。这些变化通常由以下因素触发:")]),t._v(" "),a("ul",[a("li",[t._v("DOM 操作(元素添加、删除、更改或更改元素顺序)")]),t._v(" "),a("li",[t._v("内容更改，包括表单字段中的文本更改")]),t._v(" "),a("li",[t._v("计算或改变 CSS 属性")]),t._v(" "),a("li",[t._v("添加或删除样式表")]),t._v(" "),a("li",[t._v('更改"class"属性')]),t._v(" "),a("li",[t._v("浏览器窗口操作(调整大小，滚动)")]),t._v(" "),a("li",[t._v("伪类激活(:hover)")])]),t._v(" "),a("h2",{attrs:{id:"浏览器如何优化渲染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器如何优化渲染"}},[t._v("#")]),t._v(" 浏览器如何优化渲染")]),t._v(" "),a("p",[t._v("浏览器正在尽最大努力将重新绘制/回流限制在只覆盖已更改元素的区域。例如，绝对/固定定位元素的大小变化只影响元素本身及其后代，而静态定位元素的类似变化会触发所有后续元素的复流。")]),t._v(" "),a("p",[t._v("另一种优化技术是，在运行 JavaScript 代码的同时，浏览器缓存这些更改，并在代码运行后一次性应用它们。例如，这段代码只会触发一次回流和重绘:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" $body "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'body'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n$body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("css")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'padding'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1px'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// reflow, repaint")]),t._v("\n$body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("css")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'color'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'red'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// repaint")]),t._v("\n$body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("css")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'margin'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2px'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// reflow, repaint")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// only 1 reflow and repaint will actually happen")]),t._v("\n")])])]),a("p",[t._v("但是，如上所述，访问元素属性会触发强制回流。如果我们在前面的代码块中添加一行元素属性，就会出现这种情况:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" $body "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'body'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n$body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("css")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'padding'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1px'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n$body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("css")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'padding'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// reading a property, a forced reflow")]),t._v("\n$body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("css")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'color'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'red'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n$body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("css")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'margin'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2px'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("因此，我们得到了两个回流而不是一个。因此，您应该将读取元素属性组合在一起，以优化性能(参见关于 "),a("a",{attrs:{href:"http://jsbin.com/duhah/2/edit",target:"_blank",rel:"noopener noreferrer"}},[t._v("JSBin"),a("OutboundLink")],1),t._v(" 的更详细的示例)。")]),t._v(" "),a("p",[t._v("有些情况下，你不得不触发强迫复流。示例: 我们必须对同一个元素应用相同的属性(例如“ margin-left”)两次。最初，它应该设置为100px 没有动画，然后它必须转换为50px 的值动画。您现在可以在 JSBin 上研究这个示例，但是我将在这里更详细地描述它。")]),t._v(" "),a("p",[t._v("我们首先创建一个带有转换的 CSS 类:")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".has-transition")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("-webkit-transition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" margin-left 1s ease-out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("-moz-transition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" margin-left 1s ease-out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("-o-transition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" margin-left 1s ease-out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("transition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" margin-left 1s ease-out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("然后继续执行:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// our element that has a "has-transition" class by default')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" $targetElem "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#targetElemId'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// remove the transition class")]),t._v("\n$targetElem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'has-transition'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// change the property expecting the transition to be off, as the class is not there")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// anymore")]),t._v("\n$targetElem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("css")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'margin-left'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// put the transition class back")]),t._v("\n$targetElem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'has-transition'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// change the property")]),t._v("\n$targetElem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("css")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'margin-left'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("但是，这种实现并不像预期的那样工作。这些更改将被缓存并仅应用于代码块的末尾。我们需要的是强制回流，我们可以通过以下变化来实现:")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// remove the transition class")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'has-transition'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// change the property")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("css")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'margin-left'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// trigger a forced reflow, so that changes in a class/property get applied immediately")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("offsetHeight"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// an example, other properties would work, too")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// put the transition class back")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'has-transition'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// change the property")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("css")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'margin-left'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("现在这个工作正如预期的那样。")]),t._v(" "),a("h2",{attrs:{id:"关于优化的实用建议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于优化的实用建议"}},[t._v("#")]),t._v(" 关于优化的实用建议")]),t._v(" "),a("p",[t._v("总结现有的信息，我可以建议如下:")]),t._v(" "),a("ul",[a("li",[t._v("创建有效的 HTML 和 CSS，不要忘记指定文档编码。样式应该包含在标记中，脚本应该附加到标记的末尾")]),t._v(" "),a("li",[t._v("尝试简化和优化 CSS 选择器(这种优化几乎被主要使用 CSS 预处理器的开发人员所忽略)。将嵌套级别保持在最低水平。下面是 CSS 选择器根据性能排名的方法(从最快的开始)：\n"),a("ul",[a("li",[t._v("标识符:"),a("code",[t._v("#id")])]),t._v(" "),a("li",[t._v("类别:"),a("code",[t._v(".class")])]),t._v(" "),a("li",[t._v("标签:"),a("code",[t._v("div")])]),t._v(" "),a("li",[t._v("相邻的兄弟姐妹选择器:"),a("code",[t._v("a + i")])]),t._v(" "),a("li",[t._v("父选择器:"),a("code",[t._v("ul > li")])]),t._v(" "),a("li",[t._v("通用选择器:"),a("code",[t._v("*")])]),t._v(" "),a("li",[t._v("属性选择器:"),a("code",[t._v('input[type="text"]')])]),t._v(" "),a("li",[t._v("伪类和伪元素: 你应该记住浏览器从右到左处理选择器，这就是为什么最右边的选择器应该是最快的选择器 或"),a("code",[t._v(".class")])])])])]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div *")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("..."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("// bad\n.list li")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("..."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("// bad\n.list-item")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("..."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("// good\n#list .list-item")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("..."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" // good\n")])])]),a("ol",[a("li",[t._v("在脚本中，尽可能减少 DOM 操作。缓存所有内容，包括属性和对象(如果要重用它们的话)。在执行复杂的操作时，最好使用“ offline”元素(“ offline”元素是与 DOM 断开连接并仅存储在内存中的元素) ，然后将其附加到 DOM")]),t._v(" "),a("li",[t._v("如果您使用 jQuery 来选择元素，请遵循 jQuery 选择器的最佳实践")]),t._v(" "),a("li",[t._v("要改变元素的样式，修改“ class”属性是最有效的方法之一。这种更改在 DOM 树中执行得越深入越好(还因为这有助于将逻辑与表示分离)")]),t._v(" "),a("li",[t._v("如果可以的话，只对绝对/固定位置的元素进行动画处理")]),t._v(" "),a("li",[t._v("禁用复杂系统是一个好主意 在滚动时使用动画(例如添加一个额外的“ no-hover”类)")])]),t._v(" "),a("p",[t._v("为了获得更详细的概述，看看这些文章:")]),t._v(" "),a("ol",[a("li",[a("RouterLink",{attrs:{to:"/frontend-network/browser-workflow.html"}},[t._v("浏览器是如何工作的")])],1),t._v(" "),a("li",[a("a",{attrs:{href:"http://www.phpied.com/rendering-repaint-reflowrelayout-restyle/",target:"_blank",rel:"noopener noreferrer"}},[t._v("渲染(rendering): 重绘(repaint)，回流/重新布局(reflowrelayout)，重设(restyle)"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);